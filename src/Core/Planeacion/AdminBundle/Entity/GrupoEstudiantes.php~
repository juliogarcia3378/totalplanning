<?php
namespace Core\Planeacion\AdminBundle\Entity;

use Core\ComunBundle\Enums\ECampus;
use Core\ComunBundle\Enums\ETurno;
use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;
use Symfony\Bridge\Doctrine\Validator\Constraints as DocAssert;

/**
 * Dia
 *
 * @ORM\Table(name="grupo_estudiantes")
 * @ORM\HasLifecycleCallbacks()
 * @DocAssert\UniqueEntity(fields={"nombreCompleto","semestre","carrera	","turno","periodo"}, message="Ya existe ese grupo en ese perÃ­odo.")
 * @ORM\Entity(repositoryClass="Core\Planeacion\AdminBundle\Repository\GrupoEstudiantesRepository")
 */
class GrupoEstudiantes
{
    /**
     *
     * @ORM\Column(name="id", type="integer", nullable=false)
     * @ORM\Id
     * @ORM\GeneratedValue(strategy="IDENTITY")
     * @ORM\SequenceGenerator(sequenceName="grupo_id_seq", allocationSize=1, initialValue=1)
     */
    private $id;

    /**
     * @var string
     *
     * @ORM\Column(name="nombre", type="string", length=50, nullable=true)
     */
    private $nombre;
    /**
     * @var string
     *
     * @ORM\Column(name="nivel", type="integer",  nullable=true)
     */
    private $nivel;

    /**
     * @var string
     *
     * @ORM\Column(name="nombre_completo", type="string", length=50, nullable=true)
     */
    private $nombreCompleto;
    /**
     * @var string
     *
     * @ORM\Column(name="aula_string", type="string", length=50, nullable=true)
     */
    private $aulaString;
    /**
     * @var \Turno
     *
     * @ORM\ManyToOne(targetEntity="Turno")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="turno", referencedColumnName="id")
     * })
     */
    private $turno;
    /**
     * @var \Aula
     *
     * @ORM\ManyToOne(targetEntity="Aula",inversedBy="grupo")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="aula", referencedColumnName="id")
     * })
     */
    private $aula;
    /**
     * @var \carrera	
     *
     * @ORM\ManyToOne(targetEntity="carrera	")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="carrera	", referencedColumnName="id")
     * })
     */
    private $carrera	;
    /**
     * @var \Semestre
     *
     * @ORM\ManyToOne(targetEntity="Semestre")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="semestre", referencedColumnName="id")
     * })
     */
    private $semestre;
    /**
     * @var \Periodo
     *
     * @ORM\ManyToOne(targetEntity="Periodo")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="periodo", referencedColumnName="id")
     * })
     */
    private $periodo;
    /**
     * @var boolean
     *
     * @ORM\Column(name="bilingue", type="boolean", nullable=false, options={"defaults"=0})
     */
    private $bilingue;
    /**
     * @var boolean
     *
     * @ORM\Column(name="terceros", type="boolean", nullable=false, options={"defaults"=0})
     */
    private $terceros;

    /**
     * @var \Campus
     *
     * @ORM\ManyToOne(targetEntity="Campus")
     * @ORM\JoinColumns({
     *   @ORM\JoinColumn(name="campus", referencedColumnName="id", nullable=false)
     * })
     */
    private $campus;
    /**
     * @var \ProfePeriodoHorario
     *
     * @ORM\OneToMany(targetEntity="Core\Planeacion\AdminBundle\Entity\ProfePeriodoHorario",mappedBy="grupo")
     */
    private $profePeriodoHorario;
    /**
     * @ORM\PrePersist
     * @ORM\PreUpdate
     */
    public function events()
    {
        if($this->getAula() != null)
            $this->aulaString = $this->getAula()->getNombre();

        if($this->getNombre() > 9 && !$this->getTerceros())
        {
            if($this->getNombre() == 10 ||$this->getTurno()->getId() == ETurno::Nocturno) {
                $name = $this->getTurno()->getId() * 10 + $this->getNombre();
                $this->nombreCompleto = $this->getSemestre()->getNombre2Digitos() . $name . substr(ucfirst($this->getcarrera	()->getNombre()), 0, 1);
            }
            else
            {
                $name = ucfirst( substr($this->getTurno()->getNombre(),0,1)).($this->getNombre()%10);
                $this->nombreCompleto = $this->getSemestre()->getNombre2Digitos() . $name . substr(ucfirst($this->getcarrera	()->getNombre()), 0, 1);
            }
        }
        elseif(!$this->getTerceros())
            $this->nombreCompleto =  $this->getSemestre()->getNombre2Digitos().$this->getTurno()->getId().$this->getNombre().substr(ucfirst($this->getcarrera	()->getNombre()),0,1);
        else {
            $ceros = 3-strlen($this->getNombre());
            $str='';
            for($i=0;$i<$ceros;$i++)
                $str.='0';
            $this->nombreCompleto = $str.$this->getNombre() . substr(ucfirst($this->getcarrera	()->getNombre()), 0, 1);
        }

        if($this->campus->getId() != ECampus::UANL)
            $this->nombreCompleto =  substr(ucfirst($this->getCampus()->getNombre()), 0, 1).$this->nombreCompleto;
    }

        /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set nombre
     *
     * @param string $nombre
     * @return Dia
     */
    public function setNombre($nombre)
    {
        $this->nombre = $nombre;
    
        return $this;
    }

    /**
     * Get nombre
     *
     * @return string 
     */
    public function getNombre()
    {
        return $this->nombre;
    }

    /**
     * Set nombreCompleto
     *
     * @param string $nombreCompleto
     * @return GrupoEstudiantes
     */
    public function setNombreCompleto($nombreCompleto)
    {
        $this->nombreCompleto = $nombreCompleto;
    
        return $this;
    }

    /**
     * Get nombreCompleto
     *
     * @return string 
     */
    public function getNombreCompleto()
    {
        return $this->nombreCompleto;
    }


    /**
     * Set carrera	
     *
     * @param \Core\Planeacion\AdminBundle\Entity\carrera	 $carrera	
     * @return GrupoEstudiantes
     */
    public function setcarrera	(\Core\Planeacion\AdminBundle\Entity\carrera	 $carrera	 = null)
    {
        $this->carrera	 = $carrera	;
    
        return $this;
    }

    /**
     * Get carrera	
     *
     * @return \Core\Planeacion\AdminBundle\Entity\carrera	 
     */
    public function getcarrera	()
    {
        return $this->carrera	;
    }

    /**
     * Set turno
     *
     * @param \Core\Planeacion\AdminBundle\Entity\Turno $turno
     * @return GrupoEstudiantes
     */
    public function setTurno(\Core\Planeacion\AdminBundle\Entity\Turno $turno = null)
    {
        $this->turno = $turno;
    
        return $this;
    }

    /**
     * Get turno
     *
     * @return \Core\Planeacion\AdminBundle\Entity\Turno 
     */
    public function getTurno()
    {
        return $this->turno;
    }

    /**
     * Set periodo
     *
     * @param \Core\Planeacion\AdminBundle\Entity\Periodo $periodo
     * @return GrupoEstudiantes
     */
    public function setPeriodo(\Core\Planeacion\AdminBundle\Entity\Periodo $periodo = null)
    {
        $this->periodo = $periodo;
    
        return $this;
    }

    /**
     * Get periodo
     *
     * @return \Core\Planeacion\AdminBundle\Entity\Periodo 
     */
    public function getPeriodo()
    {
        return $this->periodo;
    }

    /**
     * Set aula
     *
     * @param \Core\Planeacion\AdminBundle\Entity\Aula $aula
     * @return GrupoEstudiantes
     */
    public function setAula(\Core\Planeacion\AdminBundle\Entity\Aula $aula = null)
    {
        $this->aula = $aula;
    
        return $this;
    }

    /**
     * Get aula
     *
     * @return \Core\Planeacion\AdminBundle\Entity\Aula 
     */
    public function getAula()
    {
        return $this->aula;
    }

    /**
     * Set semestre
     *
     * @param \Core\Planeacion\AdminBundle\Entity\Semestre $semestre
     * @return GrupoEstudiantes
     */
    public function setSemestre(\Core\Planeacion\AdminBundle\Entity\Semestre $semestre = null)
    {
        $this->semestre = $semestre;
    
        return $this;
    }

    /**
     * Get semestre
     *
     * @return \Core\Planeacion\AdminBundle\Entity\Semestre 
     */
    public function getSemestre()
    {
        return $this->semestre;
    }

    /**
     * Set nivel
     *
     * @param integer $nivel
     * @return GrupoEstudiantes
     */
    public function setNivel($nivel)
    {
        $this->nivel = $nivel;
    
        return $this;
    }

    /**
     * Get nivel
     *
     * @return integer 
     */
    public function getNivel()
    {
        return $this->nivel;
    }

    /**
     * Set aulaString
     *
     * @param string $aulaString
     * @return GrupoEstudiantes
     */
    public function setAulaString($aulaString)
    {
        $this->aulaString = $aulaString;
    
        return $this;
    }

    /**
     * Get aulaString
     *
     * @return string 
     */
    public function getAulaString()
    {
        return $this->aulaString;
    }

    /**
     * Set bilingue
     *
     * @param boolean $bilingue
     * @return GrupoEstudiantes
     */
    public function setBilingue($bilingue)
    {
        $this->bilingue = $bilingue;
    
        return $this;
    }

    /**
     * Get bilingue
     *
     * @return boolean 
     */
    public function getBilingue()
    {
        return $this->bilingue;
    }

    /**
     * Set campus
     *
     * @param \Core\Planeacion\AdminBundle\Entity\Campus $campus
     * @return GrupoEstudiantes
     */
    public function setCampus(\Core\Planeacion\AdminBundle\Entity\Campus $campus = null)
    {
        $this->campus = $campus;
    
        return $this;
    }

    /**
     * Get campus
     *
     * @return \Core\Planeacion\AdminBundle\Entity\Campus 
     */
    public function getCampus()
    {
        return $this->campus;
    }

    /**
     * Set terceros
     *
     * @param boolean $terceros
     * @return GrupoEstudiantes
     */
    public function setTerceros($terceros)
    {
        $this->terceros = $terceros;
    
        return $this;
    }

    /**
     * Get terceros
     *
     * @return boolean 
     */
    public function getTerceros()
    {
        return $this->terceros;
    }
}